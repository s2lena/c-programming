Grading at Wed Dec 25 06:22:58 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1386== Memcheck, a memory error detector
==1386== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1386== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1386== Command: ./tester hands.txt draw.txt
==1386== Parent PID: 1385
==1386== 
==1386== Invalid read of size 8
==1386==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1386==    by 0x401D46: main (test-input.c:84)
==1386==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1386== 
==1386== 
==1386== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1386==  Access not within mapped region at address 0x8
==1386==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1386==    by 0x401D46: main (test-input.c:84)
==1386==  If you believe this happened as a result of a stack
==1386==  overflow in your program's main thread (unlikely but
==1386==  possible), you can try to increase the size of the
==1386==  main thread stack using the --main-stacksize= flag.
==1386==  The main thread stack size used in this run was 8388608.
==1386== 
==1386== HEAP SUMMARY:
==1386==     in use at exit: 194 bytes in 16 blocks
==1386==   total heap usage: 36 allocs, 20 frees, 17,282 bytes allocated
==1386== 
==1386== LEAK SUMMARY:
==1386==    definitely lost: 34 bytes in 3 blocks
==1386==    indirectly lost: 112 bytes in 8 blocks
==1386==      possibly lost: 0 bytes in 0 blocks
==1386==    still reachable: 48 bytes in 5 blocks
==1386==         suppressed: 0 bytes in 0 blocks
==1386== Rerun with --leak-check=full to see details of leaked memory
==1386== 
==1386== For counts of detected and suppressed errors, rerun with: -v
==1386== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1391== Memcheck, a memory error detector
==1391== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1391== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1391== Command: ./tester hands.txt draw.txt
==1391== Parent PID: 1390
==1391== 
==1391== Invalid read of size 8
==1391==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1391==    by 0x401D46: main (test-input.c:84)
==1391==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1391== 
==1391== 
==1391== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1391==  Access not within mapped region at address 0x8
==1391==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1391==    by 0x401D46: main (test-input.c:84)
==1391==  If you believe this happened as a result of a stack
==1391==  overflow in your program's main thread (unlikely but
==1391==  possible), you can try to increase the size of the
==1391==  main thread stack using the --main-stacksize= flag.
==1391==  The main thread stack size used in this run was 8388608.
==1391== 
==1391== HEAP SUMMARY:
==1391==     in use at exit: 656 bytes in 49 blocks
==1391==   total heap usage: 102 allocs, 53 frees, 23,408 bytes allocated
==1391== 
==1391== LEAK SUMMARY:
==1391==    definitely lost: 136 bytes in 12 blocks
==1391==    indirectly lost: 448 bytes in 32 blocks
==1391==      possibly lost: 0 bytes in 0 blocks
==1391==    still reachable: 72 bytes in 5 blocks
==1391==         suppressed: 0 bytes in 0 blocks
==1391== Rerun with --leak-check=full to see details of leaked memory
==1391== 
==1391== For counts of detected and suppressed errors, rerun with: -v
==1391== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1397== Memcheck, a memory error detector
==1397== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1397== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1397== Command: ./tester h.txt d.txt
==1397== Parent PID: 1396
==1397== 
==1397== Invalid read of size 8
==1397==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1397==    by 0x401D46: main (test-input.c:84)
==1397==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1397== 
==1397== 
==1397== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1397==  Access not within mapped region at address 0x8
==1397==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1397==    by 0x401D46: main (test-input.c:84)
==1397==  If you believe this happened as a result of a stack
==1397==  overflow in your program's main thread (unlikely but
==1397==  possible), you can try to increase the size of the
==1397==  main thread stack using the --main-stacksize= flag.
==1397==  The main thread stack size used in this run was 8388608.
==1397== 
==1397== HEAP SUMMARY:
==1397==     in use at exit: 1,832 bytes in 75 blocks
==1397==   total heap usage: 146 allocs, 71 frees, 27,224 bytes allocated
==1397== 
==1397== LEAK SUMMARY:
==1397==    definitely lost: 136 bytes in 12 blocks
==1397==    indirectly lost: 416 bytes in 28 blocks
==1397==      possibly lost: 0 bytes in 0 blocks
==1397==    still reachable: 1,280 bytes in 35 blocks
==1397==         suppressed: 0 bytes in 0 blocks
==1397== Rerun with --leak-check=full to see details of leaked memory
==1397== 
==1397== For counts of detected and suppressed errors, rerun with: -v
==1397== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1403== Memcheck, a memory error detector
==1403== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1403== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1403== Command: ./tester i1 i2
==1403== Parent PID: 1402
==1403== 
==1403== Invalid write of size 1
==1403==    at 0x400B83: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1403==    by 0x400DE6: read_input (in /graderhome/work/c4prj2_input/tester)
==1403==    by 0x401C2B: main (test-input.c:69)
==1403==  Address 0x520cbe2 is 0 bytes after a block of size 2 alloc'd
==1403==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1403==    by 0x400B2A: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1403==    by 0x400DE6: read_input (in /graderhome/work/c4prj2_input/tester)
==1403==    by 0x401C2B: main (test-input.c:69)
==1403== 
==1403== Invalid read of size 8
==1403==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1403==    by 0x401D46: main (test-input.c:84)
==1403==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1403== 
==1403== 
==1403== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1403==  Access not within mapped region at address 0x8
==1403==    at 0x40106D: print_hand (in /graderhome/work/c4prj2_input/tester)
==1403==    by 0x401D46: main (test-input.c:84)
==1403==  If you believe this happened as a result of a stack
==1403==  overflow in your program's main thread (unlikely but
==1403==  possible), you can try to increase the size of the
==1403==  main thread stack using the --main-stacksize= flag.
==1403==  The main thread stack size used in this run was 8388608.
==1403== 
==1403== HEAP SUMMARY:
==1403==     in use at exit: 3,476 bytes in 167 blocks
==1403==   total heap usage: 349 allocs, 182 frees, 41,668 bytes allocated
==1403== 
==1403== LEAK SUMMARY:
==1403==    definitely lost: 204 bytes in 18 blocks
==1403==    indirectly lost: 472 bytes in 19 blocks
==1403==      possibly lost: 0 bytes in 0 blocks
==1403==    still reachable: 2,800 bytes in 130 blocks
==1403==         suppressed: 0 bytes in 0 blocks
==1403== Rerun with --leak-check=full to see details of leaked memory
==1403== 
==1403== For counts of detected and suppressed errors, rerun with: -v
==1403== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
